# Intelligence Framework para SIMIR

@load base/frameworks/intel
@load base/frameworks/notice

module Intelligence;

export {
    redef enum Notice::Type += {
        Intel_Hit,
        Malicious_IP,
        Malicious_Domain,
        Malicious_URL,
        Malicious_Hash
    };
}

# Configura√ß√µes do framework de intelig√™ncia
redef Intel::read_files += {
    "/usr/local/zeek/share/zeek/site/intel/malicious-ips.txt",
    "/usr/local/zeek/share/zeek/site/intel/malicious-domains.txt",
    "/usr/local/zeek/share/zeek/site/intel/feodo-ips.txt",
    "/usr/local/zeek/share/zeek/site/intel/hostfile-domains.txt",
    "/usr/local/zeek/share/zeek/site/intel/spamhaus-drop.txt",
    "/usr/local/zeek/share/zeek/site/intel/tor-exits.txt",
    "/usr/local/zeek/share/zeek/site/intel/urlhaus-domains.txt",
    "/usr/local/zeek/share/zeek/site/intel/suricata-malware.txt"
};

# Evento quando um indicador de intelig√™ncia √© encontrado
event Intel::match(s: Intel::Seen, items: set[Intel::Item])
{
    for ( item in items ) {
        local msg = "";
        local notice_type = Intelligence::Intel_Hit;
        
        # Determina tipo espec√≠fico de alerta baseado no tipo de IOC
        switch ( item$indicator_type ) {
            case Intel::ADDR:
                notice_type = Intelligence::Malicious_IP;
                msg = fmt("üö® IP MALICIOSO DETECTADO: %s (Fonte: %s) - %s", 
                         s$indicator, item$meta$source, item$meta$desc);
                break;
                
            case Intel::DOMAIN:
                notice_type = Intelligence::Malicious_Domain;
                msg = fmt("üö® DOM√çNIO MALICIOSO DETECTADO: %s (Fonte: %s) - %s", 
                         s$indicator, item$meta$source, item$meta$desc);
                break;
                
            case Intel::URL:
                notice_type = Intelligence::Malicious_URL;
                msg = fmt("üö® URL MALICIOSA DETECTADA: %s (Fonte: %s) - %s", 
                         s$indicator, item$meta$source, item$meta$desc);
                break;
                
            case Intel::FILE_HASH:
                notice_type = Intelligence::Malicious_Hash;
                msg = fmt("üö® HASH MALICIOSO DETECTADO: %s (Fonte: %s) - %s", 
                         s$indicator, item$meta$source, item$meta$desc);
                break;
                
            default:
                msg = fmt("üéØ THREAT INTELLIGENCE MATCH: %s (Tipo: %s, Fonte: %s) - %s", 
                         s$indicator, item$indicator_type, item$meta$source, item$meta$desc);
                break;
        }
        
        # Gera alerta detalhado
        NOTICE([$note=notice_type,
                $msg=msg,
                $src=s$host,
                $conn=s$conn,
                $identifier=cat(s$indicator),
                $suppress_for=30.0]);  # Suprime por 30 segundos para evitar spam
    }
}
